{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate < new Date()) {\n            iziToast.error({\n    title: 'Error',\n    message: 'Please choose a date in the future',\n            });\n            btnStart.setAttribute(\"disabled\", true)\n        } else {\n            userSelectedDate = selectedDate;\n            btnStart.removeAttribute(\"diabled\");\n        }\n    // console.log(selectedDates[0]);\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\n\nconst btnStart = document.querySelector(\"button[data-start]\");\nconst timePicker = document.querySelector(\"#datetime-picker\");\n\nbtnStart.addEventListener(\"click\", startCount);\n\nfunction startCount() {\n    btnStart.setAttribute(\"disabled\", true);\n    timePicker.setAttribute(\"disabled\", true);\n    const timerInterval = setInterval(() => {\n        const remainingTime = userSelectedDate - new Date();\n        if (remainingTime <= 0) {\n            clearInterval(timerInterval);\n            return;\n        }\n        const { days, hours, minutes, seconds } = convertMs(remainingTime);\n        document.querySelector('[data-days]').textContent = addLeadingZero(days);\n        document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n        document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n        document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n    }, 1000);\n}\n    \nfunction addLeadingZero(value) {\n    if (value < 10) {\n        return \"0\" + value;\n    } else {\n        return value;\n    }\n}\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","options","selectedDates","selectedDate","iziToast","btnStart","flatpickr","timePicker","startCount","timerInterval","remainingTime","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"+IAMA,IAAIA,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,EAAe,IAAI,MACnBC,EAAS,MAAM,CACvB,MAAO,QACP,QAAS,oCACb,CAAa,EACDC,EAAS,aAAa,WAAY,EAAI,IAEtCL,EAAmBG,EACnBE,EAAS,gBAAgB,SAAS,EAG3C,CACH,EAEAC,EAAU,mBAAoBL,CAAO,EAGrC,MAAMI,EAAW,SAAS,cAAc,oBAAoB,EACtDE,EAAa,SAAS,cAAc,kBAAkB,EAE5DF,EAAS,iBAAiB,QAASG,CAAU,EAE7C,SAASA,GAAa,CAClBH,EAAS,aAAa,WAAY,EAAI,EACtCE,EAAW,aAAa,WAAY,EAAI,EACxC,MAAME,EAAgB,YAAY,IAAM,CACpC,MAAMC,EAAgBV,EAAmB,IAAI,KAC7C,GAAIU,GAAiB,EAAG,CACpB,cAAcD,CAAa,EAC3B,MACH,CACD,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EACjE,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAChF,EAAE,GAAI,CACX,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAIA,EAAQ,GACD,IAAMA,EAENA,CAEf,CAIA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}